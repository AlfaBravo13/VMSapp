@page "/vehiclelist"
@inject IDatabaseData db
@inject NavigationManager navigationManager

<div class="container">
    <button class="btn btn-primary" @onclick="() => NavigateToNewVehiclePage()">Create New Vehicle</button>
</div>

<hr />
<br />
<div class="container text-center headline">
    <h1>Vehicle List</h1>
</div>

@if (allVehicles == null)
{
    <div class="container text-center headline">
        <h2>Loading...</h2>
    </div>
}
else
{
    <div class="container">
        <div class="row">
            @foreach (var vehicle in allVehicles)
            {
                <div class="card text-center m-2">
                    <h4 class="card-header">
                        @vehicle.Title
                    </h4>
                    <div class="card-body">
                        <h5 class="card-title">@vehicle.Number / @vehicle.BuildNumber</h5>
                        <h6 class="card-subtitle mb-2">@vehicle.Stage</h6>
                        <button class="btn btn-primary m-2" @onclick="() => NavigateToVehicleComponent(vehicle.Id)">
                            View
                        </button>
                        @if (vehicleToDelete == vehicle.Id)
                        {
                            <button class="btn btn-danger m-2" @onclick="(() => DeleteVehicle(vehicle.Id))">
                                Confirm Delete
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-outline-danger m-2" @onclick="(() => vehicleToDelete = vehicle.Id)">
                                Delete
                            </button>
                        }

                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private List<VehicleModel> allVehicles;
    private int vehicleToDelete;

    protected override async Task OnParametersSetAsync()
    {
        allVehicles = await db.GetAllVehicles();
    }

    private async Task DeleteVehicle(int id)
    {
        await db.DeleteVehicle(id);
        allVehicles.Remove(allVehicles.Where(x => x.Id == id).FirstOrDefault());
        vehicleToDelete = 0;
    }

    private void NavigateToVehicleComponent(int id)
    {
        navigationManager.NavigateTo($"vehicle/{ id }");
    }

    private void NavigateToNewVehiclePage()
    {
        navigationManager.NavigateTo($"newvehicle");
    }
}