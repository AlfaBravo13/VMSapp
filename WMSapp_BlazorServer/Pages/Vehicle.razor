@page "/vehicle/{ActiveId:int}"
@inject IDatabaseData db
@inject NavigationManager navigationManager 

<p>Title: @ShowedVehicle.Title</p>
<p>Number: @ShowedVehicle.Number</p>
<p>Build: @ShowedVehicle.BuildNumber</p>
<p>Stage: @ShowedVehicle.Stage</p>

<button class="btn btn-primary" @onclick="PromoteVehicleStage">
    Promote
</button>
<button class="btn btn-primary" @onclick="DemoteVehicleStage">
    Demote
</button>

<br />
<br />

<h1>Experiment list:</h1>

<button class="btn btn-primary" @onclick="() => NavigateToNewExperimentComponent(ActiveId)">
    Create New Experiment
</button>

@foreach (var experiment in AllVehicleExperiments)
{
    <p>@experiment.Title</p>
    <button class="btn btn-primary" @onclick="() => NavigateToExperimentComponent(experiment.Id)">
        View
    </button>
}

@code {
    [Parameter]
    public int ActiveId { get; set; }

    private VehicleModel ShowedVehicle { get; set; }
    private List<ExperimentModel> AllVehicleExperiments { get; set; }

    protected override void OnParametersSet()
    {
        ShowedVehicle = db.GetSelectedVehicle(ActiveId);
        AllVehicleExperiments = db.GetVehicleExperiments(ActiveId);
    }

    private void PromoteVehicleStage()
    {
        db.PromoteVehicleStage(ActiveId);
    }

    private void DemoteVehicleStage()
    {
        db.DemoteVehicleStage(ActiveId);
    }

    private void NavigateToExperimentComponent(int id)
    {
        navigationManager.NavigateTo($"experiment/{ id }");
    }

    private void NavigateToNewExperimentComponent(int id )
    {
        navigationManager.NavigateTo($"newexperiment/{ id }");
    }

}
